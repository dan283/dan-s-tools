import bpy

class BoneRenamerProperties(bpy.types.PropertyGroup):
    prefix: bpy.props.StringProperty(name="Prefix", default="")
    suffix: bpy.props.StringProperty(name="Suffix", default="")
    base_name: bpy.props.StringProperty(name="Base Name", default="Bone")
    digits: bpy.props.IntProperty(name="Digits", default=2, min=1, max=6)

class OBJECT_OT_rename_bones(bpy.types.Operator):
    bl_idname = "object.rename_bones"
    bl_label = "Rename Bones"
    bl_description = "Renames selected bones with the given naming convention"
    bl_options = {'REGISTER', 'UNDO'}

    def execute(self, context):
        props = context.scene.bone_renamer_props
        armature = context.object

        if not armature or armature.type != 'ARMATURE':
            self.report({'ERROR'}, "Select an armature object")
            return {'CANCELLED'}

        bones = context.selected_pose_bones if context.mode == 'POSE' else context.selected_editable_bones
        if not bones:
            self.report({'ERROR'}, "No bones selected")
            return {'CANCELLED'}

        for idx, bone in enumerate(bones):
            number = str(idx + 1).zfill(props.digits)
            bone.name = f"{props.prefix}{props.base_name}{number}{props.suffix}"

        return {'FINISHED'}

class OBJECT_PT_bone_renamer_panel(bpy.types.Panel):
    bl_label = "Bone Renamer"
    bl_idname = "OBJECT_PT_bone_renamer_panel"
    bl_space_type = 'VIEW_3D'
    bl_region_type = 'UI'
    bl_category = "Bone Name"

    def draw(self, context):
        layout = self.layout
        props = context.scene.bone_renamer_props

        layout.prop(props, "prefix")
        layout.prop(props, "base_name")
        layout.prop(props, "suffix")
        layout.prop(props, "digits")
        layout.operator("object.rename_bones")

classes = [
    BoneRenamerProperties,
    OBJECT_OT_rename_bones,
    OBJECT_PT_bone_renamer_panel
]

def register():
    for cls in classes:
        bpy.utils.register_class(cls)
    bpy.types.Scene.bone_renamer_props = bpy.props.PointerProperty(type=BoneRenamerProperties)

def unregister():
    for cls in reversed(classes):
        bpy.utils.unregister_class(cls)
    del bpy.types.Scene.bone_renamer_props

if __name__ == "__main__":
    register()
